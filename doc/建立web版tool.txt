
建立 React 專案 使用工具	Vite
npm create vite@latest gm-tools-ui -- --template react-ts
cd gm-tools-ui

| 套件                    | 用途                                                     |
| --------------------- | ------------------------------------------------------ |
| `@mui/material`       | ✅ 核心 Material UI 元件，例如 Button、Dialog、TextField         |
| `@emotion/react`      | ✅ CSS-in-JS 樣式引擎（React 整合）                             |
| `@emotion/styled`     | ✅ styled API，讓你可以寫 styled components                   |
| `@mui/icons-material` | ✅ 各種常見的 Google Material Icons，像是 Add、Delete、Search 等圖示 |

npm install @mui/material @emotion/react @emotion/styled @mui/icons-material

| 部分          | 解釋                                        |
| ------------ | ----------------------------------------- |
| `@types/ws`  | 安裝 `ws` 這個 WebSocket 套件的 TypeScript 型別定義  |
| `--save-dev` | 表示這個套件是**開發時用的**，不會被打包到正式環境（例如上線用的 build） |

npm install --save-dev @types/ws

模組化架構
src/
  store/
    useAppStore.ts          ← 全域狀態（登入、連線、訊息）
  components/
    layout/AppLayout.tsx    ← 頁面框架（Header/Drawer/左右欄位）
    StatusBar.tsx           ← 右上角狀態＋連線按鈕
    Menu.tsx                ← 左側選單（三個功能）
    MessageLog.tsx          ← 中間訊息紀錄
    LoginForm.tsx           ← 登入表單
  dialogs/
    BroadcastDialog.tsx     ← 廣播輸入
    CommentDialog.tsx       ← 留言輸入
    ConfirmDialog.tsx       ← 通用確認對話框（清場/登出都可用）
  App.tsx                   ← 組裝頁面（很薄）


